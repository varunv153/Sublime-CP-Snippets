<snippet>
	<description>KMP</description>
	<content><![CDATA[void computeLPSArray(string pat, vi &lps) 
{ 
    int len = 0; lps[0] = 0;
    for (int i=1;i < pat.length();) 
    { 
        if (pat[i] == pat[len]) 
        { 
            len++; 
            lps[i] = len; 
            i++;
        } 
        else if (len != 0) 
            len = lps[len - 1]; 
        else
        { 
            lps[i] = 0; 
            i++; 
        }
    } 
} 
int KMPSearch(string pat, string txt) 
{ 
    int M = pat.length(), N = txt.length(), j = 0,ans=0 ; 
    vi lps(M);
    computeLPSArray(pat, M, lps);
    for (int i=0;i < N;) 
    { 
        if (pat[j] == txt[i]) 
        { 
            j++; i++; 
        } 
        if (j == M) 
        { 
            ++ans;//printf("Found pattern at index %d ", i - j);
            j = lps[j - 1]; 
        } 
        else if (i < N && pat[j] != txt[i]) 
        { 
            if (j != 0) 
                j = lps[j - 1]; 
            else
                i = i + 1; 
        } 
    } 
    return ans;
} ]]></content>
	<tabTrigger>kmp</tabTrigger>
	<scope>source.c++, source.objc++</scope>
</snippet>
